---
- name: Install Percona PostgreSQL on multiple OS
  hosts: all
  become: true
  vars_files:
    - ../vars.yml
  tasks:

    - name: Ensure curl is installed
      package:
        name: curl
        state: present

    - name: Install dependencies for RPM-based systems
      when: ansible_facts['os_family'] | lower in os_family_rpm
      block:
        - name: Enable EPEL repository
          yum:
            name: epel-release
            state: present

        - name: Enable Codeready Builder repository for RHEL 8/9 and derivatives
          shell: >
            dnf config-manager --set-enabled codeready-builder-for-rhel-{{ ansible_distribution_major_version }}-x86_64-rpms
          when: "'rhel' in ansible_distribution | lower or 'rocky' in ansible_distribution | lower"
          ignore_errors: true

    - name: Add Percona repository for DEB-based systems
      when: ansible_os_family | lower in os_family_deb
      block:
        - name: Download Percona release package
          get_url:
            url: "https://repo.percona.com/apt/percona-release_latest.{{ ansible_distribution_release }}_all.deb"
            dest: "/tmp/percona-release_latest_{{ ansible_distribution_release }}_all.deb"

        - name: Install Percona release package
          command: dpkg -i /tmp/percona-release_latest_{{ ansible_distribution_release }}_all.deb

        - name: Update apt cache
          apt:
            update_cache: true

        - name: Enable Percona repository
          command: percona-release setup ppg-{{ percona_pg_version }}

    - name: Add Percona repository for RPM-based systems
      when: ansible_os_family | lower in os_family_rpm
      block:
        - name: Install Percona release package
          yum:
            name: "https://repo.percona.com/yum/percona-release-latest.noarch.rpm"
            state: present

        - name: Enable Percona repository
          command: percona-release setup ppg{{ percona_pg_version }}

    - name: Install Percona PostgreSQL
      package:
        name: 
          - "percona-ppg-server-{{ percona_pg_version }}"
        state: present

    - name: Initialize PostgreSQL database on RPM systems
      when: ansible_os_family | lower in os_family_rpm
      command: "/usr/pgsql-{{ percona_pg_version }}/bin/postgresql-{{ percona_pg_version }}-setup initdb"

    - name: Start PostgreSQL service
      service:
        name: postgresql
        state: started
        enabled: true

    - name: Check PostgreSQL version
      command: "psql --version"
      register: postgres_version_output

    - name: Print PostgreSQL version
      debug:
        msg: "{{ postgres_version_output.stdout }}"