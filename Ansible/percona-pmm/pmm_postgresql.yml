---
- name: Configure PostgreSQL for PMM
  hosts: all
  become: yes
  vars_files:
    - vars.yml

  tasks:
    # Ensure PMM user is created
    - name: Create PMM user in PostgreSQL
      community.postgresql.postgresql_user:
        name: "{{ pmm_postgresql_user }}"
        password: "{{ pmm_postgresql_password }}"
        encrypted: yes
        priv: "SUPERUSER"
        state: present
        login_user: "{{ postgresql_admin_user }}"
        login_password: "{{ postgresql_admin_password }}"
        db: postgres
        port: 5432
      become_user: postgres

    # Update pg_hba.conf for PMM user
    - name: Allow PMM user in pg_hba.conf
      ansible.builtin.lineinfile:
        path: "{{ pg_hba_conf_path }}"
        line: "local   all             {{ pmm_postgresql_user }}                                md5"
        state: present
      notify: Reload PostgreSQL

    # Update postgresql.conf for extensions
    - name: Configure shared_preload_libraries in postgresql.conf
      ansible.builtin.lineinfile:
        path: "{{ postgresql_conf_path }}"
        regexp: "^#?shared_preload_libraries\\s*=\\s*.*"
        line: "shared_preload_libraries = '{{ ','.join(pg_extensions) }}'"
        state: present
      notify: Reload PostgreSQL

    # Install extensions
    - name: Install PostgreSQL extensions
      ansible.builtin.shell: "psql -U {{ postgresql_admin_user }} -d postgres -c 'CREATE EXTENSION IF NOT EXISTS {{ item }};'"
      with_items: "{{ pg_extensions }}"
      become_user: postgres

    # Register PMM Client
    - name: Configure PMM Client to connect to PMM Server
      ansible.builtin.command:
        cmd: "pmm-admin config --server-insecure-tls --server-url=https://{{ pmm_server_username }}:{{ admin_password }}@{{ pmm_server_address }} {{ inventory_hostname }}"
      register: pmm_config_output
      changed_when: false

    # Add PostgreSQL service to PMM
    - name: Add PostgreSQL service to PMM
      ansible.builtin.command:
        cmd: "pmm-admin add postgresql --username={{ pmm_postgresql_user }} --password={{ pmm_postgresql_password }} --service-name={{ inventory_hostname }}-postgresql --host={{ ansible_host }} --port=5432"
      register: pmm_add_service_output
      changed_when: false

  handlers:
    - name: Reload PostgreSQL
      ansible.builtin.service:
        name: "{{ postgresql_service_name }}"
        state: reloaded