---
- name: Install Elasticsearch dynamically based on version
  hosts: all
  become: yes
  vars_files:
    - vars.yml

  tasks:
    - name: Install required packages for Debian/Ubuntu
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - wget
        - gnupg
      when: ansible_os_family == "Debian"
      
    - name: Download and add Elasticsearch GPG key for Debian/Ubuntu
      apt_key:
        url: "{{ elastic_gpg_key }}"
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Elasticsearch APT repository for Debian/Ubuntu
      apt_repository:
        repo: "deb {{ elastic_repo_url_apt }} stable main"
        state: present
      when: ansible_os_family == "Debian"

    - name: Update APT cache for Debian/Ubuntu
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Elasticsearch for Debian/Ubuntu
      apt:
        name: elasticsearch
        state: present
      when: ansible_os_family == "Debian"

    - name: Import Elasticsearch GPG key for RedHat/CentOS
      rpm_key:
        state: present
        key: "{{ elastic_gpg_key }}"
      when: ansible_os_family == "RedHat"

    - name: Create Elasticsearch repository file for RedHat/CentOS
      template:
        src: templates/elasticsearch-yum.j2
        dest: /etc/yum.repos.d/elasticsearch.repo
      when: ansible_os_family == "RedHat"

    - name: Install Elasticsearch for RedHat/CentOS
      yum:
        name: elasticsearch
        state: present
      when: ansible_os_family == "RedHat"

    - name: Enable and start Elasticsearch service
      systemd:
        name: elasticsearch
        enabled: yes
        state: started

    - name: Reset Elasticsearch password for 'elastic' user
      shell: |
        echo "y" | /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic
      register: elasticsearch_password_output
      changed_when: false

    - name: Extract new 'elastic' password
      set_fact:
        elastic_password: "{{ elasticsearch_password_output.stdout | regex_search('New value: (.*)', '\\1') }}"

    - name: Get Elasticsearch version
      command: /usr/share/elasticsearch/bin/elasticsearch --version
      register: elasticsearch_version

    - name: Display Elasticsearch version
      debug:
        msg: "Elasticsearch Version: {{ elasticsearch_version }}"

    - name: Display elastic user password
      ansible.builtin.debug:
        msg: "Elastic user password: {{ elastic_password }}"
