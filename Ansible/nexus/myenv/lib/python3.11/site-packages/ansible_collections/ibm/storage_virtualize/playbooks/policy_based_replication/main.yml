- name: Using the IBM Storage Virtualize collection For PBR configuration
  hosts: localhost
  collections:
    - ibm.storage_virtualize
  gather_facts: no
  connection: local
  vars_files:
    - PBR_variable.yml
  vars:
    volume_count: "{{number_of_volumes | default(10)}}"
    vol_prefix: "{{volume_prefix | default('vol_')}}"
  tasks:
    - name: Create mTLS on both the clusters
      include_tasks: Create_mTLS.yml
      no_log: true 

    - name: Create mdiskgrp_drp and provisionpolicy on both the clusters
      include_tasks: Create_mdiskgrp_drp_proviPolicy.yml
      no_log: true 

    - name: Get mdisk info
      register: results
      ibm_svcinfo_command:
        command: "svcinfo lsmdiskgrp"
        clustername: "{{users_data[0].cluster_ip}}"
        username: "{{users_data[0].cluster_username}}"
        password: "{{users_data[0].cluster_password}}"
        log_path: "{{ log_path | default('/tmp/ansiblePB.debug') }}"

    - name: Set replication pool link UID
      set_fact:
        uid: "{{item['replication_pool_link_uid']}}"
      loop: "{{ (results['stdout']) }}"

    - name: Get primary cluster id info 
      register: results
      ibm_svcinfo_command:
        command: "svcinfo lspartnership"
        clustername: "{{users_data[1].cluster_ip}}"
        username: "{{users_data[1].cluster_username}}"
        password: "{{users_data[1].cluster_password}}"
        log_path: "{{ log_path | default('/tmp/ansiblePB.debug') }}"

    - name: Set cluster id 
      set_fact:
        uid1: "{{item['id']}}"
      loop: "{{ (results['stdout']) }}"

    - name: Get secondary cluster id info
      register: results
      ibm_svcinfo_command:
        command: "svcinfo lspartnership"
        clustername: "{{users_data[0].cluster_ip}}"
        username: "{{users_data[0].cluster_username}}"
        password: "{{users_data[0].cluster_password}}"
        log_path: "{{ log_path | default('/tmp/ansiblePB.debug') }}"

    - name: Set cluster id 
      set_fact:
        uid2: "{{item['id']}}"
      loop: "{{ (results['stdout']) }}"

    - name: set provisionpolicy and replicationpoollinkuid on primary site
      ibm_svc_mdiskgrp:
        clustername: "{{users_data[0].cluster_ip}}"
        username: "{{users_data[0].cluster_username}}"
        password: "{{users_data[0].cluster_password}}"
        log_path: "{{ log_path | default('/tmp/ansiblePB.debug') }}"
        name: mdg0
        state: present
        replicationpoollinkuid: "{{uid}}"
        replication_partner_clusterid: "{{uid2}}"
        provisioningpolicy: provisioning_policy0

    - name: set provisionpolicy and replicationpoollinkuid on secondary site
      ibm_svc_mdiskgrp:
        clustername: "{{users_data[1].cluster_ip}}"
        username: "{{users_data[1].cluster_username}}"
        password: "{{users_data[1].cluster_password}}"
        log_path: "{{ log_path | default('/tmp/ansiblePB.debug') }}"
        name: mdg0
        state: present
        replicationpoollinkuid: "{{uid}}"
        replication_partner_clusterid: "{{uid1}}"
        provisioningpolicy: provisioning_policy0

    - name: Create replication policy 
      ibm_sv_manage_replication_policy:
        clustername: "{{users_data[0].cluster_ip}}"
        username: "{{users_data[0].cluster_username}}"
        password: "{{users_data[0].cluster_password}}"
        log_path: "{{log_path | default('/tmp/ansiblePB.debug')}}"
        name: replication_policy_1
        topology: 2-site-async-dr
        location1system: "{{uid1}}"
        location1iogrp: 0
        location2system: "{{uid2}}"
        location2iogrp: 0
        rpoalert: 300
        state: present
  
    - name: Create volume group
      ibm_svc_manage_volumegroup:
        clustername: "{{users_data[0].cluster_ip}}"
        username: "{{users_data[0].cluster_username}}"
        password: "{{users_data[0].cluster_password}}"
        log_path: "{{log_path | default('/tmp/ansiblePB.debug')}}"
        name: "{{volume_group_name}}"
        replicationpolicy: replication_policy_1
        state: present
  
    - name: Create volumes and add to volumegroup
      ibm_svc_manage_volume:
        clustername: "{{users_data[0].cluster_ip}}"
        username: "{{users_data[0].cluster_username}}"
        password: "{{users_data[0].cluster_password}}"
        log_path: "{{log_path | default('/tmp/ansiblePB.debug')}}"
        name: "{{vol_prefix}}{{item}}"
        state: "present"
        pool: "mdg0"
        size: "{{volume_size}}"
        unit: "gb"
        volumegroup: "{{volume_group_name}}"
      with_sequence: start=1 end="{{volume_count}}"
  
    - name: masterVdisks-host mapping 
      register: results 
      ibm_svc_vol_map:
        clustername: "{{users_data[0].cluster_ip}}"
        username: "{{users_data[0].cluster_username}}"
        password: "{{users_data[0].cluster_password}}"
        log_path: "{{log_path | default('/tmp/ansiblePB.debug')}}"
        state: present
        volname: "{{vol_prefix}}{{item}}"
        host: "{{host_name}}"
      with_sequence: start=1 end="{{volume_count}}"
