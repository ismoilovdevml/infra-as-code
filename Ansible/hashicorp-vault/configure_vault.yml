---
- name: Configure and Initialize Vault
  hosts: all
  become: true
  vars_files:
    - vars.yml

  tasks:
    - name: Create directories for Vault configuration and data
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ vault_config_path }}"
        - "{{ vault_data_path }}"

    - name: Deploy Vault configuration file
      template:
        src: vault.hcl.j2
        dest: "{{ vault_config_path }}/vault.hcl"
        mode: '0644'

    - name: Start and enable Vault service
      service:
        name: vault
        state: started
        enabled: true

    - name: Add VAULT_ADDR to user's bashrc
      lineinfile:
        path: ~/.bashrc
        line: "export VAULT_ADDR='{{ vault_api_addr }}'"
        create: yes

    - name: Source the updated bashrc
      shell: source ~/.bashrc
      args:
        executable: /bin/bash

    - name: Check if Vault is already initialized
      command: vault status
      register: vault_status_output
      failed_when: vault_status_output.rc not in [0, 2]
      changed_when: false

    - name: Initialize Vault if not already initialized
      command: vault operator init -format=json
      when: "'Initialized: true' not in vault_status_output.stdout"
      register: vault_init_output
      changed_when: false

    - name: Display unseal keys and root token if initialization occurred
      debug:
        msg: |
          Vault has been successfully initialized.
          Access the UI at: {{ vault_api_addr }}
          Unseal Keys (Base64):
          {% for key in vault_init_output.stdout | from_json | json_query('unseal_keys_b64') %}
          - {{ key }}
          {% endfor %}
          Root Token: {{ vault_init_output.stdout | from_json | json_query('root_token') }}
      when: vault_init_output is defined