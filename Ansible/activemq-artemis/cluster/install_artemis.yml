---
- name: Install ActiveMQ Artemis on multiple OS
  hosts: master,nodes
  become: yes
  vars_files:
    - vars.yml

  tasks:
    - name: Download ActiveMQ Artemis
      get_url:
        url: "{{ artemis_url }}"
        dest: /tmp/apache-artemis-{{ artemis_version }}-bin.tar.gz

    - name: Extract ActiveMQ Artemis
      unarchive:
        src: /tmp/apache-artemis-{{ artemis_version }}-bin.tar.gz
        dest: /opt
        remote_src: yes

    - name: Check if Artemis installation directory exists
      stat:
        path: "{{ artemis_install_dir }}"
      register: artemis_install_dir_stat

    - name: Move extracted Artemis to installation directory
      command: mv /opt/apache-artemis-{{ artemis_version }} {{ artemis_install_dir }}
      when: not artemis_install_dir_stat.stat.exists

    - name: Create artemis group
      group:
        name: "{{ artemis_group }}"
        state: present

    - name: Create artemis user and assign to group
      user:
        name: "{{ artemis_user }}"
        group: "{{ artemis_group }}"
        createhome: yes
        shell: /bin/bash
        state: present

    - name: Change ownership of Artemis directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ artemis_user }}"
        group: "{{ artemis_group }}"
        recurse: yes
      loop:
        - "{{ artemis_install_dir }}"
        - "{{ artemis_instance_dir }}"

    - name: Ensure log directory exists and permissions are set
      file:
        path: "{{ artemis_instance_dir }}/log"
        state: directory
        owner: "{{ artemis_user }}"
        group: "{{ artemis_group }}"
        mode: '0755'

    - name: Ensure tmp/webapps directory exists and permissions are set
      file:
        path: "{{ artemis_instance_dir }}/tmp/webapps"
        state: directory
        owner: "{{ artemis_user }}"
        group: "{{ artemis_group }}"
        mode: '0755'
        recurse: yes

    - name: Set permissions Artemis instance data directory
      file:
        path: /opt/artemis-instance/data
        owner: "{{ artemis_user }}"
        group: "{{ artemis_group }}"
        state: directory
        recurse: yes

    - name: Create Artemis instance
      command: "{{ artemis_install_dir }}/bin/artemis create {{ artemis_instance_dir }} --user admin --password {{ artemis_password }} --allow-anonymous --force"

    - name: Deploy Artemis systemd service file
      template:
        src: templates/artemis.service.j2
        dest: /etc/systemd/system/artemis.service
        owner: root
        group: root
        mode: '0644'

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Enable and start the Artemis service
      systemd:
        name: artemis
        enabled: yes
        state: started

    - name: Update bootstrap.xml to bind to 0.0.0.0
      replace:
        path: "{{ artemis_instance_dir }}/etc/bootstrap.xml"
        regexp: '(<binding name="artemis" uri=")(.*)(:8161">)'
        replace: '\1http://0.0.0.0\3'

    - name: Update Jolokia access to allow all origins
      replace:
        path: "{{ artemis_instance_dir }}/etc/jolokia-access.xml"
        regexp: '<allow-origin>.*</allow-origin>'
        replace: '<allow-origin>*://*</allow-origin>'

    - name: Restart Artemis service after config changes
      systemd:
        name: artemis
        state: restarted
        enabled: yes