---
- name: Uninstall and clean up Redis on multiple OS
  hosts: all
  become: yes
  vars:
    debian_redis_package: "redis-server"
    redhat_redis_package: "redis"

  tasks:
    - name: Check if Redis service is running on Debian-based systems
      when: ansible_os_family == "Debian"
      shell: "systemctl is-active redis-server"
      register: debian_redis_service
      failed_when: false

    - name: Stop Redis service on Debian-based systems
      when: ansible_os_family == "Debian" and debian_redis_service.stdout == "active"
      systemd:
        name: redis-server
        state: stopped

    - name: Check if Redis service is running on RedHat-based systems
      when: ansible_os_family == "RedHat"
      shell: "systemctl is-active redis"
      register: redhat_redis_service
      failed_when: false

    - name: Stop Redis service on RedHat-based systems
      when: ansible_os_family == "RedHat" and redhat_redis_service.stdout == "active"
      systemd:
        name: redis
        state: stopped

    - name: Uninstall Redis on Ubuntu/Debian
      when: ansible_os_family == "Debian"
      apt:
        name: "{{ debian_redis_package }}"
        state: absent
        purge: yes

    - name: Uninstall Redis on RedHat/Rocky
      when: ansible_os_family == "RedHat"
      yum:
        name: "{{ redhat_redis_package }}"
        state: absent

    - name: Check SELinux status
      command: "getenforce"
      register: selinux_status
      changed_when: false
      failed_when: false

    - name: Check if Redis data directory exists on Debian-based systems
      when: ansible_os_family == "Debian"
      stat:
        path: /var/lib/redis
      register: redis_data_dir
      failed_when: false

    - name: Skip SELinux context removal if unlabeled or disabled (Debian)
      when: ansible_os_family == "Debian" and redis_data_dir.stat.exists and redis_data_dir.stat.isdir == true and selinux_status.stdout != "Disabled"
      shell: |
        if ls -Zd /var/lib/redis | grep -q 'unlabeled'; then
          exit 0
        else
          chcon -t default_t /var/lib/redis
        fi
      ignore_errors: true

    - name: Clean up Redis data directory on Debian-based systems (only if directory exists)
      when: ansible_os_family == "Debian" and redis_data_dir.stat.exists and redis_data_dir.stat.isdir == true
      file:
        path: /var/lib/redis
        state: absent
        recurse: yes

    - name: Check if Redis data directory exists on RedHat-based systems
      when: ansible_os_family == "RedHat"
      stat:
        path: /var/lib/redis
      register: redis_data_dir_redhat
      failed_when: false

    - name: Skip SELinux context removal if unlabeled or disabled (RedHat)
      when: ansible_os_family == "RedHat" and redis_data_dir_redhat.stat.exists and redis_data_dir_redhat.stat.isdir == true and selinux_status.stdout != "Disabled"
      shell: |
        if ls -Zd /var/lib/redis | grep -q 'unlabeled'; then
          exit 0
        else
          chcon -t default_t /var/lib/redis
        fi
      ignore_errors: true

    - name: Clean up Redis data directory on RedHat-based systems (only if directory exists)
      when: ansible_os_family == "RedHat" and redis_data_dir_redhat.stat.exists and redis_data_dir_redhat.stat.isdir == true
      file:
        path: /var/lib/redis
        state: absent
        recurse: yes

    - name: Check if Redis configuration directory exists on Debian-based systems
      when: ansible_os_family == "Debian"
      stat:
        path: /etc/redis
      register: redis_config_dir
      failed_when: false

    - name: Clean up Redis configuration files on Debian-based systems (only if directory exists)
      when: ansible_os_family == "Debian" and redis_config_dir.stat.exists and redis_config_dir.stat.isdir == true
      file:
        path: /etc/redis
        state: absent
        recurse: yes

    - name: Check if Redis configuration directory exists on RedHat-based systems
      when: ansible_os_family == "RedHat"
      stat:
        path: /etc/redis
      register: redis_config_dir_redhat
      failed_when: false

    - name: Clean up Redis configuration files on RedHat-based systems (only if directory exists)
      when: ansible_os_family == "RedHat" and redis_config_dir_redhat.stat.exists and redis_config_dir_redhat.stat.isdir == true
      file:
        path: /etc/redis
        state: absent
        recurse: yes

    - name: Reload package manager caches on Debian-based systems
      when: ansible_os_family == "Debian"
      apt:
        update_cache: yes

    - name: Reload package manager caches on RedHat-based systems
      when: ansible_os_family == "RedHat"
      yum:
        name: "*"
        state: latest